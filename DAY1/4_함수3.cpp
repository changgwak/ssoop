// C++ 함수 특징 3. inline   .. 36page


       int add1(int a, int b) { return a + b; }
inline int add2(int a, int b) { return a + b; }

// #1. 인라인 함수의 의미
// => 함수 호출시, 실제 호출이 아닌 기계어 코드치환 해달라는 것
// => 장점 : 빠르다.
// => 단점 : 함수의 크기가 큰데, 여러번 치환되면 코드메모리 증가
//		    add2 이 경우는 크기가 작으므로 전혀 문제 되지 않는다.

// #2. 인라인 함수라도 
// => 기본 적으로 컴파일러는 치환하지 않습니다.
// => 최적화 옵션을 지정하거나, 인라인 치환을 해달라는 옵션을 전달해야 치환됩니다.

// => 인라인 함수가 아니라고, 최적화하면 치환될수도 있습니다.

// => godbolt.org 에서 확인하려면
//    x64 msvc 컴파일러(visual studio 의 컴파일러)로 하고 "-Ob1" 옵션사용


int main()
{
	int n1 = add1(1, 2); // 1. 인자 2개를 약속된 장소에 넣고(레지스터 또는 스택)
						 // 2. 함수로 이동


	int n2 = add2(1, 2);  // add2 의 기계어 코드 자체를 이부분에 치환
						  // mov eax, 2
						  // add eax, 1
						  // mov n2, eax
}
